<?php
	error_reporting(E_ERROR | E_WARNING | E_PARSE | E_NOTICE);
	
	$dir = dirname(__DIR__ . '/vendor/patchwork/utf8/*');
	
	require $dir . '/class/Patchwork/Utf8.php';
	require $dir . '/class/Patchwork/Utf8/Bootup.php';
	require $dir . '/class/Patchwork/PHP/Shim/Xml.php';
	require $dir . '/class/Patchwork/PHP/Shim/Intl.php';
	require $dir . '/class/Patchwork/PHP/Shim/Iconv.php';
	require $dir . '/class/Patchwork/PHP/Shim/Mbstring.php';
	require $dir . '/class/Patchwork/PHP/Shim/Normalizer.php';
	
	class_exists('Normalizer', false) or require $dir . '/class/Normalizer.php';

	//Bootstrap for Patchwork utf8
	\Patchwork\Utf8\Bootup::initAll();
	\Patchwork\Utf8\Bootup::filterRequestUri();
	\Patchwork\Utf8\Bootup::filterRequestInputs();
	
	//Include Path definition to take care of local Apache Issue
	$include_path = '/didapi/';
	
	require_once dirname(__DIR__) . '/didapi/library/RedBeanORM/rb.php';
	
	//Autoload section to register all classes from ./classes/
	spl_autoload_extensions('.php, .class.php');

	function classLoader($class)
	{
		try {
			$filename = strtolower($class) . '.php';
			
			// Hack to avoid auto-loading on files generated by RedBean ORM	
			if (!strncmp("Model_", $class, strlen("Model_")))
				return true;
				
			$file =  dirname(__DIR__) . '/didapi/class/' . $filename;
			if (file_exists($file) && is_readable($file))
			{
				include_once $file;
				
			} else {
				echo 'File ' . $file . ' does not exist !';
			}	
		} catch (Exception $e) {
			echo $e->getMessage(), "\n";
		}
	}
 	
	spl_autoload_register('classLoader');
	
	if (!isset($_SESSION)) { session_start(); }
?>

